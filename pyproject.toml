[tool.poetry]
name = "micromazemaster"
version = "0.1.0"
description = ""
authors = ["Benjamin Langer <info@benjaminlanger.dev>"]
readme = "README.md"

[tool.poetry.scripts]
micromazemaster = "micromazemaster.tools.cli:micromazemaster_cli"
micromazemaster_gui = "micromazemaster.tools.gui:micromazemaster_gui"

[tool.poetry.dependencies]
python = "~3.11"
rich = "^13.9.3"
typer = "^0.12.5"
dynaconf = "^3.2.6"
customtkinter = "^5.2.2"
pillow = "^11.0.0"
matplotlib = "^3.9.2"
torch = "^2.5.1"
tqdm = "^4.67.0"
shapely = "^2.0.6"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.0.1"
black = "^24.10.0"
isort = "^5.13.2"
jupyterlab = "^4.3.0"
ipywidgets = "^8.1.5"

[tool.poetry.group.microexport]
optional = true

[tool.poetry.group.microexport.dependencies]
onnxscript = "^0.1.0.dev20241112"
onnx2tf = "^1.26.2"
tensorflow = "^2.18.0"
tf-keras = "^2.18.0"
onnx-graphsurgeon = "^0.5.2"
sng4onnx = "^1.0.4"
onnxruntime = "^1.20.0"
sne4onnx = "^1.0.13"
onnxsim = [
  { version = "^0.4.36", markers = "sys_platform == 'linux' and platform_machine == 'x86_64'" },
  { path = ".github/wheel/onnxsim-0.4.36-cp311-cp311-linux_aarch64.whl", markers = "sys_platform == 'linux' and platform_machine == 'aarch64'" },
  { version = "^0.4.36", markers = "sys_platform == 'darwin'" },
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
src_paths = ["micromazemaster"]
